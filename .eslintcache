[{"E:\\hmj\\practise\\document\\src\\index.js":"1","E:\\hmj\\practise\\document\\src\\reportWebVitals.js":"2","E:\\hmj\\practise\\document\\src\\App.js":"3","E:\\hmj\\practise\\document\\src\\components\\OneInput.js":"4","E:\\hmj\\practise\\document\\src\\components\\Content.js":"5","E:\\hmj\\practise\\document\\src\\components\\Bed.js":"6"},{"size":500,"mtime":1607334845704,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607334845704,"results":"9","hashOfConfig":"8"},{"size":912,"mtime":1607422126719,"results":"10","hashOfConfig":"8"},{"size":1059,"mtime":1607398706124,"results":"11","hashOfConfig":"8"},{"size":1784,"mtime":1607421857683,"results":"12","hashOfConfig":"8"},{"size":549,"mtime":1607421736178,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1k5w2os",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\hmj\\practise\\document\\src\\index.js",[],["28","29"],"E:\\hmj\\practise\\document\\src\\reportWebVitals.js",[],"E:\\hmj\\practise\\document\\src\\App.js",[],"E:\\hmj\\practise\\document\\src\\components\\OneInput.js",[],"E:\\hmj\\practise\\document\\src\\components\\Content.js",["30"],"import React,{PureComponent} from 'react';\r\nimport Bed from \"./Bed\";\r\n\r\n\r\nclass Content extends PureComponent {\r\n    state={\r\n        temper: true,\r\n        array: [1,2,3,4,5],\r\n    }\r\n\r\n    handleClick()  {\r\n        console.log('clicked', this);\r\n    }\r\n    buttonClick= ()=> {\r\n        const {temper} = this.state;\r\n        this.setState({\r\n            temper: !temper,\r\n        })\r\n    }\r\n    transDelete= (id) => {\r\n        const {topside,house} = this.props;\r\n        house.filter((h) =>h.id !== id);\r\n        console.log('topside',house)\r\n        return house;\r\n    }\r\n\r\n    render() {\r\n        console.log('content',this.props)\r\n        const {content, house} = this.props;\r\n        const {temper,array} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div>show the child, the two inputs' values:</div>\r\n                <div>from app: {content}</div>\r\n                <div>\r\n                    <button onClick={this.handleClick}>click me</button>\r\n                    <button onClick={this.buttonClick}>temper:{temper ? 'angry' : 'that\\'s ok'}</button>\r\n                </div>\r\n                <div>{temper ? 'I\\'m so angry' : 'just have different thought'}</div>\r\n                <div>\r\n                    <ul>{array.map((a, index) => \r\n                        <li key={index}>{a}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    In my bedroom,I have \r\n                    <ul>\r\n                        {house.map((h) => \r\n                            <Bed key={h.id} name={h.name} id={h.id} onDelete={this.transDelete}></Bed>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","E:\\hmj\\practise\\document\\src\\components\\Bed.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":21,"column":16,"nodeType":"37","messageId":"38","endLine":21,"endColumn":23},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'topside' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]